name: Generate GrowliZard Pokémon Sheets

on:
  workflow_dispatch:
  schedule:
    - cron: "0 12 * * *"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          pip install git+https://github.com/CptSpaceToaster/tcgcsv.git pandas requests Pillow fpdf2 replicate

      - name: Generate CSV from TCGplayer
        run: tcgcsv "Destined Rivals" --output destined_rivals.csv

      - name: Download or generate card images
        env:
          REPLICATE_API_TOKEN: ${{ secrets.REPLICATE_API_TOKEN }}
        run: |
          mkdir -p images
          python << 'EOF'
          import pandas as pd
          import requests
          import os
          import replicate
          from PIL import Image, ImageDraw, ImageFont
          from io import BytesIO

          csv_file = "destined_rivals.csv"
          df = pd.read_csv(csv_file)

          # Replicate client
          client = replicate.Client(api_token=os.environ["REPLICATE_API_TOKEN"])

          for _, row in df.iterrows():
              card_name = row.get("name", "unknown").replace("/", "_").replace(" ", "_")
              img_path = f"images/{card_name}.jpg"
              image_url = row.get("imageUrl")

              if pd.notna(image_url):
                  try:
                      img_data = requests.get(image_url).content
                      with open(img_path, "wb") as f:
                          f.write(img_data)
                      print(f"Downloaded official: {card_name}")
                      continue
                  except:
                      print(f"Failed official image for: {card_name}")

              # Generate AI placeholder
              print(f"Generating AI art for: {card_name}")
              prompt = f"High quality digital painting of a Pokémon-style trading card featuring {row.get('name', 'a creature')}, full art, vibrant colors, no text, fantasy background, trading card art style"
              output = client.run(
                  "stability-ai/stable-diffusion-xl:latest",
                  input={"prompt": prompt, "width": 512, "height": 736}
              )
              img_data = requests.get(output[0]).content
              with open(img_path, "wb") as f:
                  f.write(img_data)
          EOF

      - name: Generate printable PDF
        run: |
          python << 'EOF'
          import os
          import pandas as pd
          from fpdf import FPDF

          df = pd.read_csv("destined_rivals.csv")

          pdf = FPDF('P', 'mm', 'A4')
          pdf.set_auto_page_break(False)

          card_w, card_h = 63, 88
          margin_x, margin_y = 10, 10
          gap_x, gap_y = 5, 15

          images_dir = "images"
          img_files = sorted([f for f in os.listdir(images_dir) if f.endswith(".jpg")])

          for idx, img_file in enumerate(img_files):
              if idx % 9 == 0:
                  pdf.add_page()

              col = (idx % 3)
              row = ((idx % 9) // 3)
              x = margin_x + col * (card_w + gap_x)
              y = margin_y + row * (card_h + gap_y)

              img_path = os.path.join(images_dir, img_file)
              pdf.image(img_path, x, y, card_w, card_h)

              pdf.set_draw_color(200, 200, 200)
              pdf.rect(x, y, card_w, card_h)

              name = df.iloc[idx]['name'] if idx < len(df) else "Unknown"
              price = df.iloc[idx]['marketPrice'] if 'marketPrice' in df.columns and idx < len(df) else ""
              pdf.set_font("Arial", size=8)
              pdf.set_text_color(0, 0, 0)
              pdf.set_xy(x, y + card_h + 2)
              pdf.multi_cell(card_w, 4, f"{name}\n${price}", align='C')

          os.makedirs("printables", exist_ok=True)
          pdf.output("printables/destined_rivals_placeholders.pdf")
          EOF

      - name: Commit results
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add destined_rivals.csv images/ printables/
          git commit -m "Update GrowliZard CSV, images (with AI), and PDF sheets" || echo "No changes"
          git push
