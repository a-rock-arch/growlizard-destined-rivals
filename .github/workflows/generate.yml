name: Generate GrowliZard Pokémon Sheet (Diagnostic Mode)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install Dependencies and Browsers
        run: |
          pip install pandas requests beautifulsoup4 playwright
          python -m playwright install --with-deps
          
      - name: Run Diagnostic Scraper
        run: |
          python << 'EOF'
          import pandas as pd
          from bs4 import BeautifulSoup
          from playwright.sync_api import sync_playwright

          URL = "https://www.tcgplayer.com/search/pokemon/sv09-shrouded-fable?productLineName=pokemon&setName=sv09-shrouded-fable&view=grid"
          
          print(f"Scraping URL for diagnostics: {URL}")

          html_content = ""
          try:
              with sync_playwright() as p:
                  browser = p.chromium.launch(headless=True)
                  page = browser.new_page()
                  page.goto(URL, wait_until="networkidle", timeout=60000)
                  # Wait for the specific element we are targeting.
                  page.wait_for_selector("div.search-result", timeout=30000)
                  html_content = page.content()
                  browser.close()
          except Exception as e:
              print(f"!!! FAILED during Playwright browser operation: {e}")
              exit(1)

          if not html_content:
              print("!!! FAILED to retrieve page content with Playwright.")
              exit(1)
              
          soup = BeautifulSoup(html_content, "html.parser")
          search_results = soup.find_all("div", class_="search-result")

          if search_results:
              print("\n✅ Found search results. Printing the HTML for the first card below for debugging:")
              print("\n==================== BEGIN HTML OF FIRST CARD ====================\n")
              # Using prettify() makes the HTML easier to read.
              print(search_results[0].prettify())
              print("\n==================== END HTML OF FIRST CARD ======================\n")
              print("\nInstructions: Please copy the entire HTML block above (from BEGIN to END) and paste it in your reply.")
          else:
              print("❌ No 'div.search-result' containers found. The main container class has likely changed.")
          EOF